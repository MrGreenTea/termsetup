{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "env": {
    "EDITOR": "false",
    "VISUAL": "false",
    "NO_COLOR": "1",
    "PAGER": "cat"
  },
  "permissions": {
    "allow": [
      "mcp__playwright",
      "mcp__context7",
      "mcp__memory",
      "mcp__sequentialthinking__sequentialthinking",
      "mcp__private-journal",
      "Bash(grep:*)",
      "Bash(notify-send:*)",
      "Bash(curl -X GET:*)",
      "Bash(git:*)",
      "Bash(rg:*)",
      "Bash(find:*)",
      "Bash(cat:*)",
      "Bash(uuidgen:*)",
      "Bash(mkdir:*)",
      "Bash(ls:*)",
      "Bash(gh:*)",
      "Bash(cut:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(head:*)",
      "Bash(jq:*)",
      "Bash(fd:*)",
      "Bash(tail:*)",
      "Bash(wc:*)",
      "Bash(echo:*)",
      "Bash(printf:*)",
      "Bash(awk:*)",
      "Bash(diff:*)",
      "Bash(tr:*)",
      "Bash(basename:*)",
      "Bash(dirname:*)",
      "Bash(which:*)",
      "Bash(pwd:*)",
      "Bash(stat:*)",
      "Bash(file:*)",
      "Bash(readlink:*)",
      "Bash(realpath:*)",
      "Bash(date:*)",
      "Bash(whoami:*)",
      "Bash(id:*)",
      "Bash(hostname:*)",
      "Bash(uname:*)",
      "Bash(env:*)",
      "Bash(tee:*)",
      "Bash(column:*)",
      "Bash(nl:*)",
      "Bash(sed:*)",
      "Bash(jj bookmark list:*)",
      "Bash(jj config get:*)",
      "Bash(jj config list:*)",
      "Bash(jj config path:*)",
      "Bash(jj diff:*)",
      "Bash(jj evolog:*)",
      "Bash(jj file annotate:*)",
      "Bash(jj file list:*)",
      "Bash(jj file show:*)",
      "Bash(jj git remote list:*)",
      "Bash(jj git root:*)",
      "Bash(jj help:*)",
      "Bash(jj interdiff:*)",
      "Bash(jj log:*)",
      "Bash(jj operation diff:*)",
      "Bash(jj operation log:*)",
      "Bash(jj operation show:*)",
      "Bash(jj resolve --list:*)",
      "Bash(jj root:*)",
      "Bash(jj show:*)",
      "Bash(jj status:*)",
      "Bash(jj tag list:*)",
      "Bash(jj util completion:*)",
      "Bash(jj util config-schema:*)",
      "Bash(jj util markdown-help:*)",
      "Bash(jj version:*)",
      "Bash(jj workspace list:*)",
      "Bash(jj workspace root:*)",
      "Bash(podman compose ps:*)",
      "Bash(podman compose logs:*)",
      "Bash(podman compose config:*)",
      "Read(/tmp/*)",
      "Write(/tmp/*)",
      "WebFetch"
    ],
    "deny": ["Bash(rm -f:*)"]
  },
  "hooks": {
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "/var/home/jonas/Development/termsetup/scripts/notification_hook.py --ntfy-topic mrgreen_claude_code_notifications"
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "Edit",
        "hooks": [
          {
            "type": "command",
            "command": "/var/home/jonas/Development/termsetup/scripts/config_backup_hook.py"
          }
        ]
      },
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "/var/home/jonas/Development/termsetup/scripts/jujutsu_git_blocker.py"
          },
          {
            "type": "command",
            "command": "/var/home/jonas/Development/termsetup/scripts/block_command_hook.py docker podman"
          },
          {
            "type": "command",
            "command": "/var/home/jonas/Development/termsetup/scripts/block_command_hook.py docker-compose 'podman compose'"
          },
          {
            "type": "command",
            "command": "/var/home/jonas/Development/termsetup/scripts/block_command_hook.py pip uv"
          },
          {
            "type": "command",
            "command": "/var/home/jonas/Development/termsetup/scripts/gh_command_validator.py"
          },
          {
            "type": "command",
            "command": "/var/home/jonas/Development/termsetup/scripts/bash_command_validator.py"
          },
          {
            "type": "command",
            "command": "/var/home/jonas/Development/termsetup/scripts/jj_interactive_editor_blocker.py"
          },
          {
            "type": "command",
            "command": "/var/home/jonas/Development/termsetup/scripts/block_command_hook.py 'jj branch' 'jj bookmark'"
          },
          {
            "type": "command",
            "command": "/var/home/jonas/Development/termsetup/scripts/block_command_hook.py 'jj add' 'jj commit directly'"
          }
        ]
      },
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "/var/home/jonas/Development/termsetup/scripts/create_fresh_jj_change.py"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "/var/home/jonas/Development/termsetup/scripts/jj_description_prompter.py"
          }
        ]
      },
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "/var/home/jonas/Development/termsetup/scripts/cd_directory_tracker.py"
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "/var/home/jonas/Development/termsetup/scripts/jujutsu_repo_detector.py"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "/var/home/jonas/Development/termsetup/scripts/conventional_commit_hook.py"
          }
        ]
      }
    ],
    "SessionStart": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "/var/home/jonas/Development/termsetup/scripts/jujutsu_session_start.py"
          }
        ]
      }
    ]
  },
  "feedbackSurveyState": {
    "lastShownTime": 2000000000000
  }
}
